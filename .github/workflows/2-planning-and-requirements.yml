name: Chapter 2 - Planning & Requirements

on:
  push:
    branches: [ main ]
    paths:
      - 'resources/Quiz2.md'
      - 'resources/SRS.md'
  workflow_dispatch:

permissions:
  contents: write
  issues: read

jobs:
  get_current_step:
    runs-on: ubuntu-latest
    outputs:
      current_step: ${{ steps.read_step.outputs.current_step }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: read_step
        run: echo "current_step=$(cat ./.github/steps/-step.txt)" >> $GITHUB_OUTPUT

  validate_and_progress:
    needs: get_current_step
    if: >
      !github.event.repository.is_template &&
      needs.get_current_step.outputs.current_step == '2'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Quiz Answers
        id: quiz
        run: |
          QUIZ=resources/Quiz2.md
          COUNT=$(grep -c "\[X\]" "$QUIZ" || echo 0)
          if [ "$COUNT" -ne 5 ]; then
            echo "::error::You must select exactly 5 answers (found $COUNT)."
            exit 1
          fi
          # (Add any correctness grep checks here if desired)
          echo "quiz_ok=true" >> $GITHUB_OUTPUT

      - name: Check SRS Document
        id: srs
        if: steps.quiz.outputs.quiz_ok == 'true'
        run: |
          if [ ! -f "resources/SRS.md" ]; then
            echo "::error::SRS document is missing. Please create resources/SRS.md"
            exit 1
          fi
          
          # Check if SRS document has minimum content
          SRS_SIZE=$(wc -c < "resources/SRS.md" || echo 0)
          if [ "$SRS_SIZE" -lt 500 ]; then
            echo "::error::SRS document is too short. Please complete the document."
            exit 1
          fi
          
          echo "srs_ok=true" >> $GITHUB_OUTPUT

      - name: Ensure All Chapter-2 Tasks Are Closed
        if: steps.quiz.outputs.quiz_ok == 'true' && steps.srs.outputs.srs_ok == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const open = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'chapter2-task',
              state: 'open'
            });
            if (open.data.length > 0) {
              core.setFailed(`There are still ${open.data.length} open chapter2-task issues.`);
            }

      - name: Advance to Step 3
        if: success()
        uses: skills/action-update-step@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 2
          to_step: 3
          branch_name: main