name: Chapter 7 - React Fundamentals

on:
  push:
    branches: [ main ]
    paths:
      - 'quizzes/Chapter7.md'
      - 'src/components/**'
      - 'src/App.tsx'
  workflow_dispatch:

permissions:
  contents: write
  issues: read

jobs:
  get_current_step:
    runs-on: ubuntu-latest
    outputs:
      current_step: ${{ steps.read_step.outputs.current_step }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: read_step
        run: echo "current_step=$(cat ./.github/steps/-step.txt)" >> $GITHUB_OUTPUT

  validate_and_progress:
    needs: get_current_step
    if: >
      !github.event.repository.is_template &&
      needs.get_current_step.outputs.current_step == '7'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Validate Quiz Answers
        id: quiz
        run: |
          QUIZ=quizzes/Chapter7.md
          COUNT=$(grep -c "\[X\]" "$QUIZ" || echo 0)
          if [ "$COUNT" -ne 5 ]; then
            echo "::error::You must select exactly 5 answers (found $COUNT)."
            exit 1
          fi
          echo "quiz_ok=true" >> $GITHUB_OUTPUT

      - name: Check React Components
        id: components_check
        if: steps.quiz.outputs.quiz_ok == 'true'
        run: |
          if [ ! -d "src/components" ]; then
            mkdir -p src/components
            echo "::warning::Created missing components directory."
          fi
          
          # Check for required React components
          REQUIRED_COMPONENTS=(
            "About"
            "Skills"
            "Projects"
            "Navbar"
          )
          
          MISSING_COMPONENTS=""
          for comp in "${REQUIRED_COMPONENTS[@]}"; do
            if ! find src/components -name "${comp}*.tsx" > /dev/null; then
              MISSING_COMPONENTS="$MISSING_COMPONENTS\n- $comp"
            fi
          done
          
          if [ ! -z "$MISSING_COMPONENTS" ]; then
            echo "::error::Missing required React components:$MISSING_COMPONENTS"
            exit 1
          fi
          
          echo "components_ok=true" >> $GITHUB_OUTPUT

      - name: Check React Hooks Usage
        id: hooks_check
        if: steps.quiz.outputs.quiz_ok == 'true' && steps.components_check.outputs.components_ok == 'true'
        run: |
          # Check for useState hook
          if ! grep -r "useState" --include="*.tsx" src > /dev/null; then
            echo "::error::No useState hook found in the components."
            exit 1
          fi
          
          echo "hooks_ok=true" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        if: steps.quiz.outputs.quiz_ok == 'true'
        run: npm install

      - name: Type Check
        id: type_check
        if: steps.quiz.outputs.quiz_ok == 'true'
        run: |
          if npx tsc --noEmit; then
            echo "type_check_ok=true" >> $GITHUB_OUTPUT
          else
            echo "::error::TypeScript type checking failed. Please fix the type errors."
            exit 1
          fi

      - name: Run Lint Check
        id: lint_check
        if: steps.quiz.outputs.quiz_ok == 'true'
        run: |
          if npm run lint; then
            echo "lint_ok=true" >> $GITHUB_OUTPUT
          else
            echo "::error::Linting failed. Please fix the issues."
            exit 1
          fi

      - name: Build Project
        id: build_check
        if: steps.quiz.outputs.quiz_ok == 'true' && steps.lint_check.outputs.lint_ok == 'true'
        run: |
          if npm run build; then
            echo "build_ok=true" >> $GITHUB_OUTPUT
          else
            echo "::error::Build failed. Please fix the issues."
            exit 1
          fi

      - name: Ensure All Chapter-7 Tasks Are Closed
        if: >
          steps.quiz.outputs.quiz_ok == 'true' && 
          steps.components_check.outputs.components_ok == 'true' &&
          steps.hooks_check.outputs.hooks_ok == 'true' &&
          steps.type_check.outputs.type_check_ok == 'true' &&
          steps.lint_check.outputs.lint_ok == 'true' &&
          steps.build_check.outputs.build_ok == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const open = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'chapter7-task',
              state: 'open'
            });
            if (open.data.length > 0) {
              core.setFailed(`There are still ${open.data.length} open chapter7-task issues.`);
            }

      - name: Advance to Step 8
        if: success()
        uses: skills/action-update-step@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 7
          to_step: 8
          branch_name: main
